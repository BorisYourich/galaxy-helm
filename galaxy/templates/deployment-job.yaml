apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "galaxy.fullname" . }}-job
  labels:
    app.kubernetes.io/name: {{ include "galaxy.name" . }}
    helm.sh/chart: {{ include "galaxy.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.jobHandlers.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "galaxy.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "galaxy.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        fsGroup: 101
      initContainers:
        - name: {{ .Chart.Name }}-init-postgres
          image: alpine:3.7
          command: ['sh', '-c', 'until nc -z -w3 {{ template "galaxy-postgresql.fullname" $ }} 5432; do echo waiting for galaxy-postgres service; sleep 1; done;']
        - name: {{ .Chart.Name }}-init-chown
          image: alpine:3.7
          command: ['sh', '-c', 'chown -R 101:101 /galaxy/server/database']
          volumeMounts:
            - name: galaxy-data
              mountPath: /galaxy/server/database/
      containers:
        - name: {{ .Chart.Name }}-job
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command: ["python", "/galaxy/server/scripts/galaxy-main"]
          args: ["-c", "/galaxy/server/config/galaxy.yml", "--server-name", "$(POD_NAME)", "--attach-to-pool", "job-handlers"]
          volumeMounts:
            {{- range $key,$entry := .Values.configs }}
            - name: galaxy-conf-files
              mountPath: /galaxy/server/{{ $entry.mountPath }}
              subPath: {{ $key }}
            {{- end }}
            - name: galaxy-data
              mountPath: /galaxy/server/database/
            {{- if .Values.cvmfs.enabled }}
            - name: cvmfs-gxy-main
              mountPath: {{ .Values.cvmfs.main.mountPath }}
            - name: cvmfs-gxy-data
              mountPath: {{ .Values.cvmfs.data.mountPath }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: galaxy-conf-files
          configMap:
            name: {{ template "galaxy.fullname" . }}-config-map
        - name: galaxy-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.name }}
        {{- if .Values.cvmfs.enabled }}
        - name: cvmfs-gxy-main
          persistentVolumeClaim:
            claimName: {{ template "galaxy.fullname" . }}-cvmfs-gxy-main-pvc
        - name: cvmfs-gxy-data
          persistentVolumeClaim:
            claimName: {{ template "galaxy.fullname" . }}-cvmfs-gxy-data-pvc
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
