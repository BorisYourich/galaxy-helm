# Default values for galaxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
cvmfs:
  enabled: false
  data:
    pvc:
      storage: 1Gi
    mountPath: /cvmfs/data.galaxyproject.org
  main:
    pvc:
      storage: 1Gi
    mountPath: /cvmfs/main.galaxyproject.org

webHandlers:
  replicaCount: 1

jobHandlers:
  replicaCount: 1

# All mountPaths will be relative to /galaxy
configs:
  jobConf:
    mountPath: config/job_conf.xml
    contents: |
      <job_conf>
          <plugins>
              <plugin id="local" type="runner" load="galaxy.jobs.runners.local:LocalJobRunner" workers="4"/>
          </plugins>
          <handlers assign_with="db-skip-locked" />
          <destinations>
              <destination id="local" runner="local"/>
          </destinations>
      </job_conf>
  galaxyYaml:
    mountPath: config/galaxy.yaml
    contents:
      uwsgi:
        virtualenv: /galaxy/server/.venv
        processes: 1
        http: 0.0.0.0:8080
        static-map: /static/style=/galaxy/server/static/style/blue
        pythonpath: /galaxy/server/lib
        thunder-lock: true
        module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
        buffer-size: 16384
        offload-threads: 2
        threads: 4
        die-on-term: true
        master: true
        hook-master-start: unix_signal:2 gracefully_kill_them_all
        enable-threads: true
        py-call-osafterfork: true
      galaxy:
        database_connection: '{{.Values.postgresql.username}}:{{.Values.postgresql.password}}@{{ template "galaxy-postgresql.fullname" . }}/galaxy'
        integrated_tool_panel_config: /galaxy/server/config/integrated_tool_panel.xml
        tool_config_file: "{{ .Values.cvmfs.main.mountPath }}/config/tool_conf.xml.sample,{{ .Values.cvmfs.main.mountPath }}/config/shed_tool_conf.xml"
        tool_data_table_config_path: "{{ .Values.cvmfs.main.mountPath }}/config/tool_data_table_conf.xml.sample"
        tool_dependency_dir: "{{ .Values.cvmfs.main.mountPath }}/database/dependencies"

image:
  repository: galaxy/galaxy
  tag: minimal
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

service:
  type: NodePort
  port: 8090

persistence:
  enabled: true
  name: &pvcname galaxy-pvc
  # annotations: {}
  storageClass: manual
  accessMode: ReadWriteMany
  size: 10Gi
  pv:
    name: galaxy-pv
    enabled: true
    hostPath: "/tmp/k8s/volumes/galaxy/data"

ingress:
  enabled: true
  # annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - ~
    # - host: ~
    #   paths: ["/"]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  enabled: true
  username: galaxydbuser
  password: 42
  nameOverride: galaxy-postgres
  initdbScriptsConfigMap: "{{ .Release.Name }}-galaxy-initdb"
